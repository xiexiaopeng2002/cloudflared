name: Update-cloudflared

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  push:

jobs:
  check-update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Checkout new tags to branches
        id: checkout-tags
        uses: chachako/checkout-tags@v1
        with:
          base: cloudflare/cloudflared
          token: ${{ github.token }}
          overwrite: false

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build cf-go
        if: ${{ steps.checkout-tags.outputs.up-to-date }}
        run: |
          git clone https://github.com/cloudflare/go --depth 1
          cd go/src
          ./make.bash
          chmod +x ../bin/go

      - name: Build cloudflared
        if: ${{ steps.checkout-tags.outputs.up-to-date }}
        run: |
          git clone https://github.com/cloudflare/cloudflared --depth 1
          cd cloudflared/cmd/cloudflared
          targets=(
            "arm64_cortex-a53" "arm64_cortex-a72" "arm64_generic"
            "arc_archs"
            "arm_arm1176jzf-s_vfp" "arm_arm926ej-s" "arm_cortex-a15_neon-vfpv4" "arm_cortex-a5_vfpv4"
            "arm_cortex-a7" "arm_cortex-a7_neon-vfpv4" "arm_cortex-a7_vfpv4" "arm_cortex-a8_vfpv3"
            "arm_cortex-a9" "arm_cortex-a9_neon" "arm_cortex-a9_vfpv3-d16" "arm_fa526" "arm_mpcore" "arm_xscale"
            "i386_pentium-mmx" "i386_pentium4"
            "mips64_octeonplus"
            "mips_24kc" "mips_4kec" "mips_mips32"
            "mipsel_24kc" "mipsel_24kc_24kf" "mipsel_74kc" "mipsel_mips32"
            "powerpc_464fp" "powerpc_8540"
            "amd64"
          )
          for target in "${targets[@]}"; do
            IFS='_' read -ra parts <<< "$target"
            GOARCH="${parts[0]}"
            GOARM=""
            GOMIPS=""
            if [[ $GOARCH == "arm" ]]; then
              GOARM="${parts[1]}"
            elif [[ $GOARCH == "mips"* ]]; then
              GOMIPS="${parts[1]}"
            fi
            if go tool dist list | grep -q "linux/$GOARCH"; then
              CGO_ENABLED=0 GOOS=linux GOARCH=$GOARCH GOARM=$GOARM GOMIPS=$GOMIPS /home/runner/work/cloudflared/cloudflared/go/bin/go build -a -trimpath -installsuffix cgo -ldflags '-s -w -extldflags "-static"' -o cloudflared-$target
            else
              echo "Skipping unsupported GOOS/GOARCH pair linux/$GOARCH"
            fi
          done


      - uses: actions/upload-artifact@v4
        with:
          name: cloudflared
          path: /home/runner/work/cloudflared/cloudflared/cloudflared/cmd/cloudflared/cloudflared-*
          compression-level: 0

      - name: Get latest tag
        id: latest_tag
        uses: anothrNick/github-tag-action@1.35.0
        env:
          DEFAULT_BUMP: patch
          WITH_V: true
          DEFAULT_BRANCH: main
          RELEASE_BRANCHES: main
          GITHUB_TOKEN: ${{ github.token }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: steps.latest_tag.outputs.new_tag
        with:
          make_latest: "true"
          tag_name: ${{ steps.latest_tag.outputs.new_tag }}
          files: /home/runner/work/cloudflared/cloudflared/cloudflared/cmd/cloudflared/cloudflared-*
          token: ${{ github.token }}
          fail_on_unmatched_files: false
